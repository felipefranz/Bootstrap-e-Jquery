function HashSet(a,b){var c=new Hashtable(a,b);this.add=function(a){c.put(a,!0)},this.addAll=function(a){for(var b=0,d=a.length;d>b;++b)c.put(a[b],!0)},this.values=function(){return c.keys()},this.remove=function(a){return c.remove(a)?a:null},this.contains=function(a){return c.containsKey(a)},this.clear=function(){c.clear()},this.size=function(){return c.size()},this.isEmpty=function(){return c.isEmpty()},this.clone=function(){var d=new HashSet(a,b);return d.addAll(c.keys()),d},this.intersection=function(d){for(var e,f=new HashSet(a,b),g=d.values(),h=g.length;h--;)e=g[h],c.containsKey(e)&&f.add(e);return f},this.union=function(a){for(var b,d=this.clone(),e=a.values(),f=e.length;f--;)b=e[f],c.containsKey(b)||d.add(b);return d},this.isSubsetOf=function(a){for(var b=c.keys(),d=b.length;d--;)if(!a.contains(b[d]))return!1;return!0},this.complement=function(c){for(var d,e=new HashSet(a,b),f=this.values(),g=f.length;g--;)d=f[g],c.contains(d)||e.add(d);return e}}